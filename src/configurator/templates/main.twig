worker_processes {{ WORKER_PROCESSES }};

{% if ERROR_LOG_LEVEL != "off" %}
error_log /var/log/nginx/error.log {{ ERROR_LOG_LEVEL }};
{% else %}
error_log /dev/null emerg;
{% endif %}

pid        /var/run/nginx.pid;

events {
    worker_connections {{ WORKER_CONNECTIONS }};
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    {% if SERVER_NAMES_HASH_BUCKET_SIZE != '32' %}server_names_hash_bucket_size {{ SERVER_NAMES_HASH_BUCKET_SIZE }};{% endif %}
    {% if SERVER_NAMES_HASH_MAX_SIZE != '512' %}server_names_hash_max_size {{ SERVER_NAMES_HASH_MAX_SIZE }};{% endif %}

    # resolver configuration
    {% if NO_RESOLVER == 'false' %}resolver {{ RESOLVER }} valid={{ RESOLVER_VALID }}{% if RESOLVER_NO_IPV6 == 'true' %} ipv6=off{% endif %};{% endif %}

    log_format  main  '$host $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt="$request_time" uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log  /var/log/nginx/access.log  main;

{# mtail should be written? #}
{% if not MTAIL_PATH is empty %}
    log_format mtail '$host $remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent $request_time '
    '"$http_referer" "$http_user_agent" "$content_type"';

    access_log {{ MTAIL_PATH }} mtail;
{% endif %}

{% if SYSLOG_SERVER != 'false' %}
    access_log syslog:server={{ SYSLOG_SERVER }},facility={{ SYSLOG_FACILITY }},tag=nginx,severity=info main;
{% endif %}

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout {{ KEEPALIVE_TIMEOUT }};

    # upstream comes from here!
    #include conf.d/dynamic/global/*.conf;

    # set $https only when SSL is actually used.
    map $http_x_forwarded_proto $proxy_https {
        https on;
    }

{% if CONDITIONAL_BASIC_AUTH_USED %}
    {{ include('map_conditional_basic_auth.twig') }}
{% endif %}

    # setup the scheme to use on redirects
    map $http_x_forwarded_proto $redirect_scheme {
        default http;
        http http;
        https https;
    }

{% if GLOBAL_UPSTREAMS %}
    # vhost specific upstream names!
{% for vhostName, upstream in GLOBAL_UPSTREAMS %}
    map "" $upstream_name_{{ vhostName }} {
        default    "{{ upstream }}";
    }
{% endfor %}
{% endif %}

    #increased body size, to avoid /var/cache/nginx/client_temp, nginx default 1M
    client_body_buffer_size {{ CLIENT_BODY_BUFFER_SIZE }};
    client_max_body_size {{ CLIENT_MAX_BODY_SIZE }};

    # enable gzip compression
    gzip {{ GZIP_ENABLED }}; # on/off switch for compression
    gzip_types {{ GZIP_TYPES }}; # whitelisting for content type
    gzip_proxied any; # will enable compression even for proxied requests

    # our vhosts
    {# render our subtemplate for each vhost, will only have one (default) in default scenario #}

{% set vhostCounter = 0 %}
{% for vhostName, vhost in VHOSTS %}
    {{ include('server.twig') }}
{% set vhostCounter = vhostCounter + 1 %}
{% endfor %}

}

